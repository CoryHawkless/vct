{
	"info": {
		"_postman_id": "f83ee31f-d23b-47e4-9713-3528581ab1f8",
		"name": "newStack",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Volumes",
			"item": [
				{
					"name": "New Volume",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{authorization_token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "authorization",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"NewVolumeName\",\n  \"size\": 10,\n  \"description\": \"Some Descriptsion\",\n  \"type_id\": 4,\n  \"project_id\": 4\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/volume/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"volume",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Volume by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": null
					},
					"response": []
				},
				{
					"name": "List all volumes",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{authorization_token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "authorization",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"project_id\":4\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/volume/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"volume",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Auth",
			"item": [
				{
					"name": "Login Joe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"  pm.test(\"Check response contains Authorization property\", function () {",
									"       var jsonData = pm.response.json();",
									"       pm.expect(jsonData.Authorization).to.exist;",
									"  });",
									"  pm.test(\"Content-Type is present\", function () {",
									"       pm.response.to.have.header(\"Content-Type\");",
									"  });",
									"  pm.test(\"Successful POST request\", function () {",
									"       pm.response.to.have.status(200);",
									"  });",
									"  pm.test(\"Set Authorization environment variable\", function () {",
									"       var jsonData = pm.response.json();",
									"       pm.environment.set(\"authorization_token\", jsonData.Authorization);",
									"  });",
									"  "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\":\"joe@none.com\",\n    \"password\":\"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Cory",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"  pm.test(\"Check response contains Authorization property\", function () {",
									"       var jsonData = pm.response.json();",
									"       pm.expect(jsonData.Authorization).to.exist;",
									"  });",
									"  pm.test(\"Content-Type is present\", function () {",
									"       pm.response.to.have.header(\"Content-Type\");",
									"  });",
									"  pm.test(\"Successful POST request\", function () {",
									"       pm.response.to.have.status(200);",
									"  });",
									"  pm.test(\"Set Authorization environment variable\", function () {",
									"       var jsonData = pm.response.json();",
									"       pm.environment.set(\"authorization_token\", jsonData.Authorization);",
									"  });",
									"  "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\":\"cory@hawkless.id.au\",\n    \"password\":\"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{URL}}/auth/logout",
							"host": [
								"{{URL}}"
							],
							"path": [
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Show user info",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{authorization_token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "authorization",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{URL}}/auth/user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"auth",
								"user"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}